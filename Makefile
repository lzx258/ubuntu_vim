
TARGET := $(notdir $(CURDIR))

# The exec file.
EXEC_FILE  := $(addprefix demo_, $(strip $(TARGET)))
EXEC_DIR   := ./

VERBOSE :=true
ifeq ($(VERBOSE), true)
	override VERBOSE =
else
	override VERBOSE = @
endif

RM := rm -rf
CC := gcc -ggdb -fPIC 
CPP := g++ -ggdb -fPIC 
INCLUDE  := -I. -I../include 
C_FLAGS := -std=c++11  
LD_FLAGS += -L. -L /usr/lib/ -L ../libs/linux-x86_64/lib_dummy
#LD_FLAGS += -lpthread -lm -lrt -pthread -lvlc -lopencv_core -lopencv_highgui -lopencv_imgproc -lcrowd -litf -lmlpack -lmysqlclient -lfacesdk -lfaceverify
LD_FLAGS += -fPIC -lpthread -lcvface_api -lm -pthread -lopencv_core -lopencv_highgui -lopencv_imgproc 

MAIN_MODULE	:= ./

# The header files.
HEADERS := $(wildcard $(MAIN_MODULE)/*.h)

# The c source files
SOURCES_C := $(wildcard $(MAIN_MODULE)/*.c)

# The object files.
OBJFILES_C := $(SOURCES_C:%.c=%.o)

# The cpp source files
SOURCES_CPP := $(wildcard $(MAIN_MODULE)/*.cpp)

# The object files.
OBJFILES_CPP := $(SOURCES_CPP:%.cpp=%.o)


.PHONY : build clean install

build: $(TARGET)

$(TARGET): PRINTMSG $(EXEC_FILE)
	@echo
	@echo Finished to build $(TARGET) module.
	@echo
 
PRINTMSG:
#	@echo Begin to build $(TARGET) module...

$(EXEC_FILE): $(OBJFILES_C) $(OBJFILES_CPP)
	$(CPP) -o $@ $^ $(LD_FLAGS)
	
$(OBJFILES_C): %.o: %.c $(HEADERS)
	$(CC) $(C_FLAGS) -o $@ -c $< 

$(OBJFILES_CPP): %.o: %.cpp $(HEADERS)
	$(CPP) $(INCLUDE) $(C_FLAGS) -o $@ -c $< 

install:
	@cp $(EXEC_FILE) $(EXEC_DIRS)

clean:
	@echo Removing files generated by compiler...
	$(VERBOSE) $(RM) $(OBJFILES_C) $(OBJFILES_CPP) $(EXEC_FILE)
	@echo Finished to remove files generated by compiler.
